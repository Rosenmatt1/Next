{"ast":null,"code":"var _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Prices = /*#__PURE__*/function (_React$component) {\n  \"use strict\";\n\n  _inherits(Prices, _React$component);\n\n  var _super = _createSuper(Prices);\n\n  function Prices() {\n    _classCallCheck(this, Prices);\n\n    return _super.apply(this, arguments);\n  }\n\n  return Prices;\n}(React.component);","map":{"version":3,"sources":["/home/mateo/Desktop/Next/components/Prices.js"],"names":["Prices","React","component"],"mappings":";;;;;;;;;;;;IAAMA,M;;;;;;;;;;;;;;EAAeC,KAAK,CAACC,S","sourcesContent":["class Prices extends React.component {\n\n\n    \n}"]},"metadata":{},"sourceType":"script"}