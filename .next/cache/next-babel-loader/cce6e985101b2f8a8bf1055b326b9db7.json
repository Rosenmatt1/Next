{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mateo/Desktop/Next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport Prices from '../components/Prices'; // componentDidMount() {\n//     const res = fetch('https://api.coindesk.com/v1/bpi/currentprice.json')\n//     .then(response => {\n//         response.json();\n//         });\n//     .then(data => {\n//         console.log(data)\n//     })\n// }\n// const Index = (props) => (\n//     <Layout>\n//         <div>\n//             <h1>Welcome to BitzPrice</h1>\n//             {/* {props.bpi.time.updated} */}\n//             <Prices bpi={props.bpi} />\n//         </div>\n//     </Layout>\n// )\n// Index.getInitialProps = async function() {\n//     const res = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json')\n//     const data = await res.json();\n//     console.log(\"DATA!!\", data)\n//     return {\n//         bpi: data.bpi\n//     }\n// }\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: 'USD'\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var res = fetch('https://api.coindesk.com/v1/bpi/currentprice.json').then(function (response) {\n        _this2.setState({\n          data: response.json()\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, data);\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["/home/mateo/Desktop/Next/pages/index.js"],"names":["Fetch","Layout","Prices","Index","data","res","fetch","then","response","setState","json","React","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;IAEMC,K;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,IAAI,EAAE;AADF,K;;;;;;;wCAIY;AAAA;;AAChB,UAAMC,GAAG,GAAGC,KAAK,CAAC,mDAAD,CAAL,CACPC,IADO,CACF,UAAAC,QAAQ,EAAI;AACd,QAAA,MAAI,CAACC,QAAL,CAAc;AACVL,UAAAA,IAAI,EAAEI,QAAQ,CAACE,IAAT;AADI,SAAd;AAIH,OANO,CAAZ;AASH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKN,IADL,CADJ;AAKH;;;;EAvBeO,KAAK,CAACC,S;;AA6B1B,eAAeT,KAAf","sourcesContent":["import Fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\n\nimport Prices from '../components/Prices';\n\n// componentDidMount() {\n//     const res = fetch('https://api.coindesk.com/v1/bpi/currentprice.json')\n//     .then(response => {\n//         response.json();\n//         });\n//     .then(data => {\n//         console.log(data)\n//     })\n// }\n\n// const Index = (props) => (\n//     <Layout>\n//         <div>\n//             <h1>Welcome to BitzPrice</h1>\n//             {/* {props.bpi.time.updated} */}\n//             <Prices bpi={props.bpi} />\n//         </div>\n//     </Layout>\n// )\n\n// Index.getInitialProps = async function() {\n//     const res = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json')\n//     const data = await res.json();\n//     console.log(\"DATA!!\", data)\n\n//     return {\n//         bpi: data.bpi\n//     }\n// }\n\nclass Index extends React.Component {\n    state = {\n        data: 'USD'\n    }\n\n    componentDidMount() {\n        const res = fetch('https://api.coindesk.com/v1/bpi/currentprice.json')\n            .then(response => {\n                this.setState({\n                    data: response.json()\n                \n                  })\n            });\n\n        \n    }\n\n    render() {\n        return (\n            <div>\n                {data}\n            </div>\n        )\n    }\n\n\n\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}